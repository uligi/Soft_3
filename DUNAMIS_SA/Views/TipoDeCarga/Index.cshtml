@model IEnumerable<DUNAMIS_SA.Models.TipoDeCarga>

@{
    ViewData["Title"] = "Administrar Tipos de Carga";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - DUNAMIS SA</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/Styles.css" asp-append-version="true" />
</head>
<body>
    <header class="header">
        <h1>@ViewData["Title"]</h1>
    </header>
    <main class="main-content container">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Descripción</th>
                    <th>Tarifa por Kilo</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody id="tipoCargaTableBody">
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.TipoDeCargaID</td>
                        <td>@item.Descripcion</td>
                        <td>@item.TarifaPorKilo</td>
                        <td>
                            <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#editModal" data-id="@item.TipoDeCargaID">Editar</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteTipoCarga(@item.TipoDeCargaID)">Eliminar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#editModal" onclick="showAddModal()">Agregar Nuevo Tipo de Carga</button>

        <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editModalLabel">Agregar/Editar Tipo de Carga</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="tipoCargaForm" novalidate>
                            <input type="hidden" id="TipoDeCargaID" name="TipoDeCargaID" />
                            <div class="form-group">
                                <label for="Descripcion">Descripción</label>
                                <input type="text" class="form-control" id="Descripcion" name="Descripcion" required maxlength="50" />
                                <div class="invalid-feedback">
                                    Completa este campo (máximo 50 caracteres).
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="TarifaPorKilo">Tarifa por Kilo</label>
                                <input type="number" class="form-control" id="TarifaPorKilo" name="TarifaPorKilo" required min="1" max="10000" />
                                <div class="invalid-feedback">
                                    Completa este campo con una tarifa válida (1-10000).
                                </div>
                            </div>
                            <button type="submit" class="btn btn-primary">Guardar</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </main>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var editModal = document.getElementById('editModal');
            editModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var id = button.getAttribute('data-id');
                var modalTitle = editModal.querySelector('.modal-title');
                var modalBodyInputID = editModal.querySelector('#TipoDeCargaID');
                var modalBodyInputDesc = editModal.querySelector('#Descripcion');
                var modalBodyInputTarifa = editModal.querySelector('#TarifaPorKilo');

                if (id) {
                    // Obtener los datos del modelo para el ID dado
                    var data = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model));
                    var tipoCarga = data.find(item => item.TipoDeCargaID == id);

                    modalBodyInputID.value = tipoCarga.TipoDeCargaID;
                    modalBodyInputDesc.value = tipoCarga.Descripcion;
                    modalBodyInputTarifa.value = tipoCarga.TarifaPorKilo;
                    modalTitle.textContent = 'Editar Tipo de Carga';
                } else {
                    modalBodyInputID.value = '';
                    modalBodyInputDesc.value = '';
                    modalBodyInputTarifa.value = '';
                    modalTitle.textContent = 'Agregar Tipo de Carga';
                }
            });

            var tipoCargaForm = document.getElementById('tipoCargaForm');
            tipoCargaForm.addEventListener('submit', function (event) {
                event.preventDefault();

                if (!tipoCargaForm.checkValidity()) {
                    event.stopPropagation();
                    tipoCargaForm.classList.add('was-validated');
                    return;
                }

                var id = document.getElementById('TipoDeCargaID').value;
                var descripcion = document.getElementById('Descripcion').value;
                var tarifa = document.getElementById('TarifaPorKilo').value;

                // Simulando la creación/actualización de datos
                if (id) {
                    alert('Tipo de Carga ' + id + ' actualizado: ' + descripcion + ', ' + tarifa + ' colones por kilo');
                } else {
                    alert('Nuevo Tipo de Carga agregado: ' + descripcion + ', ' + tarifa + ' colones por kilo');
                }

                var modal = bootstrap.Modal.getInstance(editModal);
                modal.hide();
                location.reload(); // Recargar la página para ver los cambios
            });

            // Validación para la cantidad de caracteres y el formato permitido
            var descripcionInput = document.getElementById('Descripcion');
            descripcionInput.addEventListener('input', function () {
                var maxLength = 50;
                if (this.value.length > maxLength) {
                    alert('La descripción no puede tener más de ' + maxLength + ' caracteres.');
                    this.value = this.value.substring(0, maxLength);
                    this.classList.add('is-invalid');
                } else {
                    this.classList.remove('is-invalid');
                }

                var invalidChars = /[^a-zA-Z0-9\s]/;
                if (invalidChars.test(this.value)) {
                    alert('La descripción solo puede contener letras, números y espacios.');
                    this.value = this.value.replace(invalidChars, '');
                    this.classList.add('is-invalid');
                } else {
                    this.classList.remove('is-invalid');
                }
            });

            var tarifaInput = document.getElementById('TarifaPorKilo');
            tarifaInput.addEventListener('input', function () {
                var minValue = 1;
                var maxValue = 10000;
                if (this.value < minValue || this.value > maxValue) {
                    alert('La tarifa debe estar entre ' + minValue + ' y ' + maxValue + ' colones.');
                    this.classList.add('is-invalid');
                    if (this.value < minValue) {
                        this.value = minValue;
                    } else if (this.value > maxValue) {
                        this.value = maxValue;
                    }
                } else {
                    this.classList.remove('is-invalid');
                }
            });
        });

        function showAddModal() {
            var modal = new bootstrap.Modal(document.getElementById('editModal'));
            modal.show();
        }

        function deleteTipoCarga(id) {
            if (confirm('¿Está seguro de que desea eliminar este tipo de carga?')) {
                // Simulando la eliminación de datos
                alert('Tipo de Carga ' + id + ' eliminado');
                location.reload();
            }
        }
    </script>
</body>
</html>
